# .github/workflows/dify_scheduled_report.yml

name: Dify Scheduled Report to WeChat

on:
  # 1. 定时触发：在北京时间每天晚上 20:00 运行
  # GitHub Actions 使用 UTC 时间，北京时间 (UTC+8) 20:00 等于 UTC 时间 12:00
  schedule:
    - cron: '0 12 * * *'

  # 2. 保留手动触发，方便你随时测试
  workflow_dispatch:

jobs:
  run_dify_and_notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 核心步骤一：调用 Dify 工作流 API
      - name: Call Dify Workflow API
        id: dify_call # 为步骤设置 ID，方便后续引用其输出
        run: |
          # 发送 POST 请求到 Dify API
          # 因为工作流不需要输入，所以 "inputs" 是一个空对象 {}
          response=$(curl -sS -X POST "${{ secrets.DIFY_WORKFLOW_URL }}" \
            -H "Authorization: Bearer ${{ secrets.DIFY_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "inputs": {},
              "response_mode": "blocking",
              "user": "github-actions-scheduled-job"
            }')

          # 打印 Dify 返回的原始 JSON，这对于调试至关重要
          echo "Dify Raw Response:"
          echo "$response"

          # 使用 jq 解析 JSON，提取结果
          # !! 重要 !!: 这个路径 '.data.outputs.text' 需要根据你的工作流实际输出来修改。
          # 请查看上面打印的 "Dify Raw Response" 来确定正确的路径。
          # 例如，如果你的输出变量叫 'result', 路径可能就是 '.data.outputs.result'
          result=$(echo "$response" | jq -r '.data.outputs.text')

          # 将提取的结果设置为该步骤的输出变量，以便下一步使用
          # 使用特殊格式来处理可能的多行文本
          echo "result<<EOF" >> $GITHUB_OUTPUT
          echo "$result" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 核心步骤二：将结果发送到 Server酱
      - name: Send result to ServerChan
        if: success() # 仅当上一步成功时才执行
        run: |
          # 使用 --data-urlencode 来确保内容中的特殊字符被正确编码
          curl -sS -X POST "https://sctapi.ftqq.com/${{ secrets.SERVERCHAN_KEY }}.send" \
            --data-urlencode "title=📅 每日Dify任务报告" \
            --data-urlencode "desp=${{ steps.dify_call.outputs.result }}"
