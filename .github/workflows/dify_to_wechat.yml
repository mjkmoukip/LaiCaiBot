# .github/workflows/dify_to_wechat.yml

name: Call Dify Workflow and Send to WeChat

# 触发器配置
on:
  # 1. 允许手动触发 (在 GitHub Actions 页面会有一个 "Run workflow" 按钮)
  workflow_dispatch:
    inputs:
      # 手动触发时，可以填写一个问题或指令给 Dify
      dify_query:
        description: '发送给Dify工作流的内容'
        required: true
        default: '请帮我写一首关于秋天的五言绝句'

  # 2. 也可以设置定时触发 (例如每天早上9点)
  # schedule:
  #   - cron: '0 1 * * *' # UTC 时间 1点，即北京时间 9点

jobs:
  dify_and_notify:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 运行环境

    steps:
      # 第一步：检出代码（虽然此工作流不直接操作代码，但这是个好习惯）
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第二步：调用 Dify 工作流 API
      - name: Call Dify Workflow API
        id: dify_call # 给这个步骤一个ID，方便后续步骤引用它的输出
        run: |
          # 使用 curl 发送 POST 请求到 Dify API
          # -sS: 静默模式，但显示错误信息
          # -H: 设置请求头，包括认证信息和内容类型
          # -d: 设置请求体 (JSON 格式)
          # 注意：这里的 'inputs' 对象结构需要和你 Dify 工作流的输入变量名一致
          # 例如，如果你的输入变量名是 'question'，就把下面的 '"query":' 改成 '"question":'
          response=$(curl -sS -X POST "${{ secrets.DIFY_WORKFLOW_URL }}" \
            -H "Authorization: Bearer ${{ secrets.DIFY_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "inputs": {
                "query": "${{ github.event.inputs.dify_query || '今天天气怎么样？' }}"
              },
              "response_mode": "blocking",
              "user": "github-actions-user"
            }')

          # 打印 Dify 返回的原始 JSON，方便调试
          echo "Dify Response:"
          echo "$response"

          # 使用 jq 解析 JSON，提取需要的结果
          # !! 重要 !!: '.data.outputs.text' 这个路径需要根据你 Dify 工作流的实际输出来修改
          # 你可以查看上面打印的 Dify Response 来确定正确的路径
          result=$(echo "$response" | jq -r '.data.outputs.text')

          # 将提取的结果设置为该步骤的输出变量
          # 使用特殊格式将多行文本传递给输出
          echo "result<<EOF" >> $GITHUB_OUTPUT
          echo "$result" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 第三步：将结果发送到 Server酱
      - name: Send result to ServerChan
        # 只有上一步成功时才执行此步骤
        if: success()
        run: |
          # 将 Dify 返回的结果作为消息内容（desp）
          # 使用 --data-urlencode 来正确处理特殊字符和换行
          curl -sS -X POST "https://sctapi.ftqq.com/${{ secrets.SERVERCHAN_KEY }}.send" \
            --data-urlencode "title=来自Dify的通知" \
            --data-urlencode "desp=${{ steps.dify_call.outputs.result }}"
